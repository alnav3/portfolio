package view

import (
    "structure"
)

templ Base(theme string) {
    <!doctype html>
    <html>
        <head>
            <meta charset="UTF-8"/>
            <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
            <link href="/style/tailwind.css" rel="stylesheet"/>
        </head>
        if theme == "dark" {
            <body id="frontpage" class="dark dark:mocha bg-base dark:text-surface0" hx-trigger="load"  hx-post="/language">
                <!-- htmx -->
                <script src="/js/htmx.min.js"></script>
            </body>
        } else {
            <body id="frontpage" class="dark:mocha bg-base dark:text-surface0" hx-trigger="load"  hx-post="/language">
                <!-- htmx -->
                <script src="/js/htmx.min.js"></script>
            </body>
        }
    </html>
}

templ HomePage(webtext structure.WebText, language, theme string, position int, child templ.Component) {
    @ThemeButton(language, theme)
    @ProfileInfo(webtext.Profile)
    @LanguageBio(webtext.InfoBio)
    @Navbar(position, webtext.NavItems, child)
    <!-- htmx -->
    <script src="/js/htmx.min.js"></script>
}
templ ButtonEN() {
    <button class="flex mr-5 items-center justify-center w-16 h-6 text-white rounded-lg overflow-hidden"
        hx-vals='js:{"language": "es"}' hx-post="/language"
        hx-swap="innerHTML" hx-target="#frontpage">
        <span class="flex items-center justify-center font-bold bg-mauve text-base dark:text-surface0 h-full w-full">EN</span>
        <span class="flex items-center justify-center font-bold bg-mantle text-text h-full w-full">ES</span>
    </button>
}

templ ButtonES() {
    <button class="flex mr-5 items-center justify-center w-16 h-6 text-white rounded-lg overflow-hidden"
        hx-vals='js:{"language": "en"}' hx-post="/language"
        hx-swap="innerHTML" hx-target="#frontpage">
        <span class="flex items-center justify-center font-bold bg-mantle text-text h-full w-full">EN</span>
        <span class="flex items-center justify-center font-bold bg-mauve text-base dark:text-surface0 h-full w-full">ES</span>
    </button>
}

templ ThemeButton (language string, theme string) {
    <div class="flex fixed top-0 right-0 p-4">
        if language == "en" {
            @ButtonEN()
        } else {
            @ButtonES()
        }
        <button
            onclick="htmx.removeClass(htmx.find('#frontpage'), 'dark')"
            hx-get="/theme" hx-target="this" hx-swap="none">
            <img src="/img/icons/theme/light.svg" alt="Icon" class="w-6 h-6 mr-2 hidden dark:inline"/>
        </button>

        <button
            onclick="htmx.addClass(htmx.find('#frontpage'), 'dark')"
            hx-get="/theme" hx-target="this" hx-swap="none">
            <img src="/img/icons/theme/dark.svg" alt="Icon" class="w-6 h-6 mr-2 dark:hidden"/>
        </button>

    </div>
}


templ ProfileInfo(profile structure.Profile) {
    <div class="sm:flex space-x-10 md:space-x-20 justify-center">
        <div class="hidden md:flex justify-end py-14">
            <img class="max-w-32 max-h-32 dark:text-white rounded-full mx-auto sm:mx-0 sm:shrink-0" src={profile.ImgURL} alt="Profile photo" />
        </div>
        <div class="py-14 space-y-3 max-w-xs lg:max-w-md sm:col-span-2 my-0 md:mx-11 mx-4">
            <p class="text-3xl font-bold tracking-tighter sm:text-4xl text-mauve">{profile.Name}</p>
            <p class="text-subtext0">{profile.JobTitle}</p>
            <p class="text-subtext0">{profile.Bio}</p>
        </div>
    </div>
}

templ LanguageBio(info structure.InfoBio) {
    <div class="flex w-full space-x-20 justify-center bg-mantle sm:col-span-2 my-0">
        <div class="flex flex-col gap-12 w-5/6 pt-5 pb-20 justify-center mx-auto">
            <div class="flex flex-col gap-3 mx-auto max-w-fit">
                <h2 class="text-3xl leading-10 font-bold text-lavender text-left">{info.Title}<span class="text-primary">.</span></h2>
                <p class="text-subtext0 text-xl max-w-4xl pb-10">{info.Introduction}</p>
                @SkillsCategoryTemplate(info.SkillCategories)
            </div>
        </div>
    </div>
}

templ SkillsCategoryTemplate(stack []structure.SkillCategory) {
    <div class="flex flex-col gap-12 lg:flex-row lg:gap-20">
        for _, category := range stack {
            <div class="flex flex-col gap-5">
                <h3 class="text-2xl font-medium text-text">{category.Title}</h3>
                <div class="flex flex-wrap gap-6">
                    for _, skill := range category.Skills {
                        <div class="flex flex-col items-center justify-center gap-1">
                            <img src={skill.IconURL} alt={skill.Name} class="h-12 text-gray-600 select-none"></img>
                            <p class="text-center text-gray-600 dark:text-gray-400">{skill.Name}</p>
                        </div>
                    }
                </div>
            </div>
        }
    </div>
}

