package front

type Profile struct{
    name string
    jobTitle string
    bio string
}

type ProjectBio struct{
    title string
        description string
}

type Project struct{
    title string
    description string
    languages []string
}

var projects = []Project{
    {title:"Portfolio website", description:"This is the portfolio website of Alex Navia. I am currently working on it.", languages:[]string{"HTML", "Tailwind", "Go"}},
    {title:"HTML", description:"This is a description", languages:[]string{"HTML", "Tailwind", "Go"}},
    {title:"Tailwind", description:"This is a description", languages:[]string{"HTML", "Tailwind", "Go"}},
}

var profile = Profile{
    name:"Alex Navia", 
    jobTitle:"Software Developer", 
    bio:"Passionate about creating amazing web experiences. I enjoy turning ideas into reality. I have experience working with JavaScript, React, and Next.js.",
}

var projectBio = ProjectBio{
    title:"Projects", 
    description:"",
}

// change htmx CDN by the js file in the future for better security
templ Base(children ...templ.Component) {
    <!doctype html>
    <html>
        <head>
            <meta charset="UTF-8"/>
            <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
            <link href="/style/tailwind.css" rel="stylesheet"/>
        </head>
        <body class="bg">
            for _, child := range children {
                @child
            }
            <!-- htmx -->
            <script src="https://unpkg.com/htmx.org@1.9.10"></script>
        </body>
    </html>
}

templ HomePage() {
    @style()
    @ProfileInfo(profile)
    @LanguageBio([]string{"HTML", "Tailwind", "Go", "Java", "C++"})
    @Navbar(0, Projects())
}

templ style(){
        <style>
#navbar-content.swapping {
      opacity: 0;
    }
#navbar-content {
      opacity: 1;
      transition: opacity 1s ease-out;
    }
    </style>
}

templ ProfileInfo(profile Profile) {
    <div class="sm:flex space-x-10 md:space-x-20 justify-center">
        <div class="hidden md:flex justify-end py-14">
            <img class="max-w-32 max-h-32 dark:text-white rounded-full mx-auto sm:mx-0 sm:shrink-0" src="/img/profile.jpg" alt="Profile photo" />
        </div>
        <div class="py-10 space-y-3 max-w-xs lg:max-w-md sm:col-span-2 my-0 md:mx-11 mx-4">
            <p class="text-3xl font-bold tracking-tighter sm:text-4xl dark:text-white">{profile.name}</p>
            <p class="text-gray-500 dark:text-gray-400">{profile.jobTitle}</p>
            <p class="text-gray-500 dark:text-gray-400 mr-5">{profile.bio}</p>
        </div>
    </div>
}

//TODO: style it better as well as for light mode
templ Projects() {
    <div id="navbar-content" class="max-w-sm md:max-w-xl lg:max-w-2xl mx-auto mt-8">
        <p class="text-3xl font-bold tracking-tighter sm:text-4xl dark:text-white">{projectBio.title}</p>
        <p class="text-gray-500 dark:text-gray-400">{projectBio.description}</p>
        for _, project := range projects {
            <a href="https://www.github.com" class="py-4 flex sm:grid-cols-3 max-w-sm md:max-w-xl lg:max-w-2xl mx-auto my-5 dark:bg-gray-800 rounded-lg shadow space-x-5">
                <div class="space-y-3 sm:col-span-2 my-0 mx-11">
                    <p class=" text-xl font-bold  add title and description, as well as a div containertracking-tighter sm:text-2xl dark:text-white">{project.title}</p>
                    <p class="text-gray-500 dark:text-gray-400">{project.description}</p>
                    @languageTags(project.languages)
                </div>
            </a>
        }
    </div>
}

//TODO: change color for light mode
templ languageTags(languages []string){
    <div class="flex flex-wrap gap-5">
        for _, language := range languages {
            <span class="px-3 py-1 text-xs dark:text-gray-950 bg-gray-200 rounded-full">#{language}</span>
        }
    </div>
}

templ LanguageBio(languages []string) {
    <div class="flex w-full space-x-20 justify-center dark:bg-gray-800 py-10 sm:col-span-2 my-0">
        <div class="justify-center space-y-3 text-center">
            for _, language := range languages {
                <p class="dark:text-white text-center">{language}</p>
            }
        </div>
    </div>
}
